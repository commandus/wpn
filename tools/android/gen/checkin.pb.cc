// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: checkin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "checkin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace checkin_proto {
class GservicesSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GservicesSetting> {};
GservicesSettingDefaultTypeInternal _GservicesSetting_default_instance_;
class AndroidCheckinRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AndroidCheckinRequest> {};
AndroidCheckinRequestDefaultTypeInternal _AndroidCheckinRequest_default_instance_;
class AndroidCheckinResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AndroidCheckinResponse> {};
AndroidCheckinResponseDefaultTypeInternal _AndroidCheckinResponse_default_instance_;

void protobuf_ShutdownFile_checkin_2eproto() {
  _GservicesSetting_default_instance_.Shutdown();
  _AndroidCheckinRequest_default_instance_.Shutdown();
  _AndroidCheckinResponse_default_instance_.Shutdown();
}

void protobuf_InitDefaults_checkin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::checkin_proto::protobuf_InitDefaults_android_5fcheckin_2eproto();
  ::google::protobuf::internal::InitProtobufDefaults();
  _GservicesSetting_default_instance_.DefaultConstruct();
  _AndroidCheckinRequest_default_instance_.DefaultConstruct();
  _AndroidCheckinResponse_default_instance_.DefaultConstruct();
  _AndroidCheckinRequest_default_instance_.get_mutable()->checkin_ = const_cast< ::checkin_proto::AndroidCheckinProto*>(
      ::checkin_proto::AndroidCheckinProto::internal_default_instance());
}

void protobuf_InitDefaults_checkin_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_checkin_2eproto_impl);
}
void protobuf_AddDesc_checkin_2eproto_impl() {
  protobuf_InitDefaults_checkin_2eproto();
  ::checkin_proto::protobuf_AddDesc_android_5fcheckin_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_checkin_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_checkin_2eproto_once_);
void protobuf_AddDesc_checkin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_checkin_2eproto_once_,
                 &protobuf_AddDesc_checkin_2eproto_impl);
}
#ifndef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_checkin_2eproto {
  StaticDescriptorInitializer_checkin_2eproto() {
    protobuf_AddDesc_checkin_2eproto();
  }
} static_descriptor_initializer_checkin_2eproto_;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GservicesSetting::kNameFieldNumber;
const int GservicesSetting::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GservicesSetting::GservicesSetting()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_checkin_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:checkin_proto.GservicesSetting)
}
GservicesSetting::GservicesSetting(const GservicesSetting& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:checkin_proto.GservicesSetting)
}

void GservicesSetting::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GservicesSetting::~GservicesSetting() {
  // @@protoc_insertion_point(destructor:checkin_proto.GservicesSetting)
  SharedDtor();
}

void GservicesSetting::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GservicesSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GservicesSetting& GservicesSetting::default_instance() {
  protobuf_InitDefaults_checkin_2eproto();
  return *internal_default_instance();
}

GservicesSetting* GservicesSetting::New(::google::protobuf::Arena* arena) const {
  GservicesSetting* n = new GservicesSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GservicesSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:checkin_proto.GservicesSetting)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GservicesSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:checkin_proto.GservicesSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:checkin_proto.GservicesSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:checkin_proto.GservicesSetting)
  return false;
#undef DO_
}

void GservicesSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:checkin_proto.GservicesSetting)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // required bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:checkin_proto.GservicesSetting)
}

size_t GservicesSetting::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:checkin_proto.GservicesSetting)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  return total_size;
}
size_t GservicesSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:checkin_proto.GservicesSetting)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GservicesSetting::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GservicesSetting*>(&from));
}

void GservicesSetting::MergeFrom(const GservicesSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:checkin_proto.GservicesSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void GservicesSetting::CopyFrom(const GservicesSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:checkin_proto.GservicesSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GservicesSetting::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GservicesSetting::Swap(GservicesSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GservicesSetting::InternalSwap(GservicesSetting* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GservicesSetting::GetTypeName() const {
  return "checkin_proto.GservicesSetting";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GservicesSetting

// required bytes name = 1;
bool GservicesSetting::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GservicesSetting::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void GservicesSetting::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void GservicesSetting::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& GservicesSetting::name() const {
  // @@protoc_insertion_point(field_get:checkin_proto.GservicesSetting.name)
  return name_.GetNoArena();
}
void GservicesSetting::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.GservicesSetting.name)
}
#if LANG_CXX11
void GservicesSetting::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.GservicesSetting.name)
}
#endif
void GservicesSetting::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.GservicesSetting.name)
}
void GservicesSetting::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.GservicesSetting.name)
}
::std::string* GservicesSetting::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:checkin_proto.GservicesSetting.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GservicesSetting::release_name() {
  // @@protoc_insertion_point(field_release:checkin_proto.GservicesSetting.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GservicesSetting::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.GservicesSetting.name)
}

// required bytes value = 2;
bool GservicesSetting::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GservicesSetting::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void GservicesSetting::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void GservicesSetting::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& GservicesSetting::value() const {
  // @@protoc_insertion_point(field_get:checkin_proto.GservicesSetting.value)
  return value_.GetNoArena();
}
void GservicesSetting::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.GservicesSetting.value)
}
#if LANG_CXX11
void GservicesSetting::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.GservicesSetting.value)
}
#endif
void GservicesSetting::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.GservicesSetting.value)
}
void GservicesSetting::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.GservicesSetting.value)
}
::std::string* GservicesSetting::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:checkin_proto.GservicesSetting.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GservicesSetting::release_value() {
  // @@protoc_insertion_point(field_release:checkin_proto.GservicesSetting.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GservicesSetting::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.GservicesSetting.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AndroidCheckinRequest::kImeiFieldNumber;
const int AndroidCheckinRequest::kMeidFieldNumber;
const int AndroidCheckinRequest::kMacAddrFieldNumber;
const int AndroidCheckinRequest::kMacAddrTypeFieldNumber;
const int AndroidCheckinRequest::kSerialNumberFieldNumber;
const int AndroidCheckinRequest::kEsnFieldNumber;
const int AndroidCheckinRequest::kIdFieldNumber;
const int AndroidCheckinRequest::kLoggingIdFieldNumber;
const int AndroidCheckinRequest::kDigestFieldNumber;
const int AndroidCheckinRequest::kLocaleFieldNumber;
const int AndroidCheckinRequest::kCheckinFieldNumber;
const int AndroidCheckinRequest::kDesiredBuildFieldNumber;
const int AndroidCheckinRequest::kMarketCheckinFieldNumber;
const int AndroidCheckinRequest::kAccountCookieFieldNumber;
const int AndroidCheckinRequest::kTimeZoneFieldNumber;
const int AndroidCheckinRequest::kSecurityTokenFieldNumber;
const int AndroidCheckinRequest::kVersionFieldNumber;
const int AndroidCheckinRequest::kOtaCertFieldNumber;
const int AndroidCheckinRequest::kFragmentFieldNumber;
const int AndroidCheckinRequest::kUserNameFieldNumber;
const int AndroidCheckinRequest::kUserSerialNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AndroidCheckinRequest::AndroidCheckinRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_checkin_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:checkin_proto.AndroidCheckinRequest)
}
AndroidCheckinRequest::AndroidCheckinRequest(const AndroidCheckinRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      mac_addr_(from.mac_addr_),
      mac_addr_type_(from.mac_addr_type_),
      account_cookie_(from.account_cookie_),
      ota_cert_(from.ota_cert_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  meid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_meid()) {
    meid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meid_);
  }
  serial_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serial_number()) {
    serial_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_number_);
  }
  esn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_esn()) {
    esn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.esn_);
  }
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_digest()) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_locale()) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  desired_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desired_build()) {
    desired_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_build_);
  }
  market_checkin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_market_checkin()) {
    market_checkin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_checkin_);
  }
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time_zone()) {
    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.has_checkin()) {
    checkin_ = new ::checkin_proto::AndroidCheckinProto(*from.checkin_);
  } else {
    checkin_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&user_serial_number_) -
    reinterpret_cast<char*>(&id_) + sizeof(user_serial_number_));
  // @@protoc_insertion_point(copy_constructor:checkin_proto.AndroidCheckinRequest)
}

void AndroidCheckinRequest::SharedCtor() {
  _cached_size_ = 0;
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  esn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_checkin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&checkin_, 0, reinterpret_cast<char*>(&user_serial_number_) -
    reinterpret_cast<char*>(&checkin_) + sizeof(user_serial_number_));
}

AndroidCheckinRequest::~AndroidCheckinRequest() {
  // @@protoc_insertion_point(destructor:checkin_proto.AndroidCheckinRequest)
  SharedDtor();
}

void AndroidCheckinRequest::SharedDtor() {
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  esn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desired_build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_checkin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete checkin_;
  }
}

void AndroidCheckinRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AndroidCheckinRequest& AndroidCheckinRequest::default_instance() {
  protobuf_InitDefaults_checkin_2eproto();
  return *internal_default_instance();
}

AndroidCheckinRequest* AndroidCheckinRequest::New(::google::protobuf::Arena* arena) const {
  AndroidCheckinRequest* n = new AndroidCheckinRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AndroidCheckinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:checkin_proto.AndroidCheckinRequest)
  mac_addr_.Clear();
  mac_addr_type_.Clear();
  account_cookie_.Clear();
  ota_cert_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_imei()) {
      GOOGLE_DCHECK(!imei_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*imei_.UnsafeRawStringPointer())->clear();
    }
    if (has_meid()) {
      GOOGLE_DCHECK(!meid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*meid_.UnsafeRawStringPointer())->clear();
    }
    if (has_serial_number()) {
      GOOGLE_DCHECK(!serial_number_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serial_number_.UnsafeRawStringPointer())->clear();
    }
    if (has_esn()) {
      GOOGLE_DCHECK(!esn_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*esn_.UnsafeRawStringPointer())->clear();
    }
    if (has_digest()) {
      GOOGLE_DCHECK(!digest_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*digest_.UnsafeRawStringPointer())->clear();
    }
    if (has_locale()) {
      GOOGLE_DCHECK(!locale_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*locale_.UnsafeRawStringPointer())->clear();
    }
    if (has_desired_build()) {
      GOOGLE_DCHECK(!desired_build_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desired_build_.UnsafeRawStringPointer())->clear();
    }
    if (has_market_checkin()) {
      GOOGLE_DCHECK(!market_checkin_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*market_checkin_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    if (has_time_zone()) {
      GOOGLE_DCHECK(!time_zone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*time_zone_.UnsafeRawStringPointer())->clear();
    }
    if (has_user_name()) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_checkin()) {
      GOOGLE_DCHECK(checkin_ != NULL);
      checkin_->::checkin_proto::AndroidCheckinProto::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 63488u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&fragment_) -
      reinterpret_cast<char*>(&id_) + sizeof(fragment_));
  }
  user_serial_number_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AndroidCheckinRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:checkin_proto.AndroidCheckinRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string imei = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 id = 2;
      case 2: {
        if (tag == 16u) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string digest = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .checkin_proto.AndroidCheckinProto checkin = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_checkin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string desired_build = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desired_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string locale = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 logging_id = 7;
      case 7: {
        if (tag == 56u) {
          set_has_logging_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logging_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string market_checkin = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market_checkin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mac_addr = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mac_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string meid = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string account_cookie = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_account_cookie()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string time_zone = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_zone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 security_token = 13;
      case 13: {
        if (tag == 105u) {
          set_has_security_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &security_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version = 14;
      case 14: {
        if (tag == 112u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ota_cert = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ota_cert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string serial_number = 16;
      case 16: {
        if (tag == 130u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serial_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string esn = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_esn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mac_addr_type = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mac_addr_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fragment = 20;
      case 20: {
        if (tag == 160u) {
          set_has_fragment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_name = 21;
      case 21: {
        if (tag == 170u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_serial_number = 22;
      case 22: {
        if (tag == 176u) {
          set_has_user_serial_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_serial_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:checkin_proto.AndroidCheckinRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:checkin_proto.AndroidCheckinRequest)
  return false;
#undef DO_
}

void AndroidCheckinRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:checkin_proto.AndroidCheckinRequest)
  // optional string imei = 1;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->imei(), output);
  }

  // optional int64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // optional string digest = 3;
  if (has_digest()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->digest(), output);
  }

  // required .checkin_proto.AndroidCheckinProto checkin = 4;
  if (has_checkin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->checkin_, output);
  }

  // optional string desired_build = 5;
  if (has_desired_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desired_build(), output);
  }

  // optional string locale = 6;
  if (has_locale()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->locale(), output);
  }

  // optional int64 logging_id = 7;
  if (has_logging_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->logging_id(), output);
  }

  // optional string market_checkin = 8;
  if (has_market_checkin()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->market_checkin(), output);
  }

  // repeated string mac_addr = 9;
  for (int i = 0; i < this->mac_addr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->mac_addr(i), output);
  }

  // optional string meid = 10;
  if (has_meid()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->meid(), output);
  }

  // repeated string account_cookie = 11;
  for (int i = 0; i < this->account_cookie_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->account_cookie(i), output);
  }

  // optional string time_zone = 12;
  if (has_time_zone()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->time_zone(), output);
  }

  // optional fixed64 security_token = 13;
  if (has_security_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(13, this->security_token(), output);
  }

  // optional int32 version = 14;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->version(), output);
  }

  // repeated string ota_cert = 15;
  for (int i = 0; i < this->ota_cert_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->ota_cert(i), output);
  }

  // optional string serial_number = 16;
  if (has_serial_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->serial_number(), output);
  }

  // optional string esn = 17;
  if (has_esn()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->esn(), output);
  }

  // repeated string mac_addr_type = 19;
  for (int i = 0; i < this->mac_addr_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->mac_addr_type(i), output);
  }

  // optional int32 fragment = 20;
  if (has_fragment()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->fragment(), output);
  }

  // optional string user_name = 21;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->user_name(), output);
  }

  // optional int32 user_serial_number = 22;
  if (has_user_serial_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->user_serial_number(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:checkin_proto.AndroidCheckinRequest)
}

size_t AndroidCheckinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:checkin_proto.AndroidCheckinRequest)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // required .checkin_proto.AndroidCheckinProto checkin = 4;
  if (has_checkin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->checkin_);
  }
  // repeated string mac_addr = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mac_addr_size());
  for (int i = 0; i < this->mac_addr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mac_addr(i));
  }

  // repeated string mac_addr_type = 19;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->mac_addr_type_size());
  for (int i = 0; i < this->mac_addr_type_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mac_addr_type(i));
  }

  // repeated string account_cookie = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->account_cookie_size());
  for (int i = 0; i < this->account_cookie_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->account_cookie(i));
  }

  // repeated string ota_cert = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ota_cert_size());
  for (int i = 0; i < this->ota_cert_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ota_cert(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string imei = 1;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string meid = 10;
    if (has_meid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->meid());
    }

    // optional string serial_number = 16;
    if (has_serial_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serial_number());
    }

    // optional string esn = 17;
    if (has_esn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->esn());
    }

    // optional string digest = 3;
    if (has_digest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->digest());
    }

    // optional string locale = 6;
    if (has_locale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->locale());
    }

    // optional string desired_build = 5;
    if (has_desired_build()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desired_build());
    }

    // optional string market_checkin = 8;
    if (has_market_checkin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->market_checkin());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string time_zone = 12;
    if (has_time_zone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time_zone());
    }

    // optional string user_name = 21;
    if (has_user_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

  }
  if (_has_bits_[8 / 32] & 63488u) {
    // optional int64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int64 logging_id = 7;
    if (has_logging_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->logging_id());
    }

    // optional fixed64 security_token = 13;
    if (has_security_token()) {
      total_size += 1 + 8;
    }

    // optional int32 version = 14;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int32 fragment = 20;
    if (has_fragment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fragment());
    }

  }
  // optional int32 user_serial_number = 22;
  if (has_user_serial_number()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_serial_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AndroidCheckinRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AndroidCheckinRequest*>(&from));
}

void AndroidCheckinRequest::MergeFrom(const AndroidCheckinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:checkin_proto.AndroidCheckinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_addr_.MergeFrom(from.mac_addr_);
  mac_addr_type_.MergeFrom(from.mac_addr_type_);
  account_cookie_.MergeFrom(from.account_cookie_);
  ota_cert_.MergeFrom(from.ota_cert_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_imei()) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (from.has_meid()) {
      set_has_meid();
      meid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meid_);
    }
    if (from.has_serial_number()) {
      set_has_serial_number();
      serial_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_number_);
    }
    if (from.has_esn()) {
      set_has_esn();
      esn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.esn_);
    }
    if (from.has_digest()) {
      set_has_digest();
      digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
    }
    if (from.has_locale()) {
      set_has_locale();
      locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
    }
    if (from.has_desired_build()) {
      set_has_desired_build();
      desired_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desired_build_);
    }
    if (from.has_market_checkin()) {
      set_has_market_checkin();
      market_checkin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_checkin_);
    }
  }
  if (from._has_bits_[8 / 32] & 65280u) {
    if (from.has_time_zone()) {
      set_has_time_zone();
      time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_checkin()) {
      mutable_checkin()->::checkin_proto::AndroidCheckinProto::MergeFrom(from.checkin());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_logging_id()) {
      set_logging_id(from.logging_id());
    }
    if (from.has_security_token()) {
      set_security_token(from.security_token());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_fragment()) {
      set_fragment(from.fragment());
    }
  }
  if (from.has_user_serial_number()) {
    set_user_serial_number(from.user_serial_number());
  }
}

void AndroidCheckinRequest::CopyFrom(const AndroidCheckinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:checkin_proto.AndroidCheckinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidCheckinRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000400) != 0x00000400) return false;
  return true;
}

void AndroidCheckinRequest::Swap(AndroidCheckinRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AndroidCheckinRequest::InternalSwap(AndroidCheckinRequest* other) {
  mac_addr_.UnsafeArenaSwap(&other->mac_addr_);
  mac_addr_type_.UnsafeArenaSwap(&other->mac_addr_type_);
  account_cookie_.UnsafeArenaSwap(&other->account_cookie_);
  ota_cert_.UnsafeArenaSwap(&other->ota_cert_);
  imei_.Swap(&other->imei_);
  meid_.Swap(&other->meid_);
  serial_number_.Swap(&other->serial_number_);
  esn_.Swap(&other->esn_);
  digest_.Swap(&other->digest_);
  locale_.Swap(&other->locale_);
  desired_build_.Swap(&other->desired_build_);
  market_checkin_.Swap(&other->market_checkin_);
  time_zone_.Swap(&other->time_zone_);
  user_name_.Swap(&other->user_name_);
  std::swap(checkin_, other->checkin_);
  std::swap(id_, other->id_);
  std::swap(logging_id_, other->logging_id_);
  std::swap(security_token_, other->security_token_);
  std::swap(version_, other->version_);
  std::swap(fragment_, other->fragment_);
  std::swap(user_serial_number_, other->user_serial_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AndroidCheckinRequest::GetTypeName() const {
  return "checkin_proto.AndroidCheckinRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AndroidCheckinRequest

// optional string imei = 1;
bool AndroidCheckinRequest::has_imei() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AndroidCheckinRequest::set_has_imei() {
  _has_bits_[0] |= 0x00000001u;
}
void AndroidCheckinRequest::clear_has_imei() {
  _has_bits_[0] &= ~0x00000001u;
}
void AndroidCheckinRequest::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
const ::std::string& AndroidCheckinRequest::imei() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.imei)
  return imei_.GetNoArena();
}
void AndroidCheckinRequest::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.imei)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.imei)
}
#endif
void AndroidCheckinRequest::set_imei(const char* value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.imei)
}
void AndroidCheckinRequest::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.imei)
}
::std::string* AndroidCheckinRequest::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_imei() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.imei)
}

// optional string meid = 10;
bool AndroidCheckinRequest::has_meid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AndroidCheckinRequest::set_has_meid() {
  _has_bits_[0] |= 0x00000002u;
}
void AndroidCheckinRequest::clear_has_meid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AndroidCheckinRequest::clear_meid() {
  meid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_meid();
}
const ::std::string& AndroidCheckinRequest::meid() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.meid)
  return meid_.GetNoArena();
}
void AndroidCheckinRequest::set_meid(const ::std::string& value) {
  set_has_meid();
  meid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.meid)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_meid(::std::string&& value) {
  set_has_meid();
  meid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.meid)
}
#endif
void AndroidCheckinRequest::set_meid(const char* value) {
  set_has_meid();
  meid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.meid)
}
void AndroidCheckinRequest::set_meid(const char* value, size_t size) {
  set_has_meid();
  meid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.meid)
}
::std::string* AndroidCheckinRequest::mutable_meid() {
  set_has_meid();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.meid)
  return meid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_meid() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.meid)
  clear_has_meid();
  return meid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_meid(::std::string* meid) {
  if (meid != NULL) {
    set_has_meid();
  } else {
    clear_has_meid();
  }
  meid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meid);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.meid)
}

// repeated string mac_addr = 9;
int AndroidCheckinRequest::mac_addr_size() const {
  return mac_addr_.size();
}
void AndroidCheckinRequest::clear_mac_addr() {
  mac_addr_.Clear();
}
const ::std::string& AndroidCheckinRequest::mac_addr(int index) const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.mac_addr)
  return mac_addr_.Get(index);
}
::std::string* AndroidCheckinRequest::mutable_mac_addr(int index) {
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.mac_addr)
  return mac_addr_.Mutable(index);
}
void AndroidCheckinRequest::set_mac_addr(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.mac_addr)
  mac_addr_.Mutable(index)->assign(value);
}
void AndroidCheckinRequest::set_mac_addr(int index, const char* value) {
  mac_addr_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.mac_addr)
}
void AndroidCheckinRequest::set_mac_addr(int index, const char* value, size_t size) {
  mac_addr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.mac_addr)
}
::std::string* AndroidCheckinRequest::add_mac_addr() {
  // @@protoc_insertion_point(field_add_mutable:checkin_proto.AndroidCheckinRequest.mac_addr)
  return mac_addr_.Add();
}
void AndroidCheckinRequest::add_mac_addr(const ::std::string& value) {
  mac_addr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:checkin_proto.AndroidCheckinRequest.mac_addr)
}
void AndroidCheckinRequest::add_mac_addr(const char* value) {
  mac_addr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:checkin_proto.AndroidCheckinRequest.mac_addr)
}
void AndroidCheckinRequest::add_mac_addr(const char* value, size_t size) {
  mac_addr_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:checkin_proto.AndroidCheckinRequest.mac_addr)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AndroidCheckinRequest::mac_addr() const {
  // @@protoc_insertion_point(field_list:checkin_proto.AndroidCheckinRequest.mac_addr)
  return mac_addr_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AndroidCheckinRequest::mutable_mac_addr() {
  // @@protoc_insertion_point(field_mutable_list:checkin_proto.AndroidCheckinRequest.mac_addr)
  return &mac_addr_;
}

// repeated string mac_addr_type = 19;
int AndroidCheckinRequest::mac_addr_type_size() const {
  return mac_addr_type_.size();
}
void AndroidCheckinRequest::clear_mac_addr_type() {
  mac_addr_type_.Clear();
}
const ::std::string& AndroidCheckinRequest::mac_addr_type(int index) const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.mac_addr_type)
  return mac_addr_type_.Get(index);
}
::std::string* AndroidCheckinRequest::mutable_mac_addr_type(int index) {
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.mac_addr_type)
  return mac_addr_type_.Mutable(index);
}
void AndroidCheckinRequest::set_mac_addr_type(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.mac_addr_type)
  mac_addr_type_.Mutable(index)->assign(value);
}
void AndroidCheckinRequest::set_mac_addr_type(int index, const char* value) {
  mac_addr_type_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.mac_addr_type)
}
void AndroidCheckinRequest::set_mac_addr_type(int index, const char* value, size_t size) {
  mac_addr_type_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.mac_addr_type)
}
::std::string* AndroidCheckinRequest::add_mac_addr_type() {
  // @@protoc_insertion_point(field_add_mutable:checkin_proto.AndroidCheckinRequest.mac_addr_type)
  return mac_addr_type_.Add();
}
void AndroidCheckinRequest::add_mac_addr_type(const ::std::string& value) {
  mac_addr_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:checkin_proto.AndroidCheckinRequest.mac_addr_type)
}
void AndroidCheckinRequest::add_mac_addr_type(const char* value) {
  mac_addr_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:checkin_proto.AndroidCheckinRequest.mac_addr_type)
}
void AndroidCheckinRequest::add_mac_addr_type(const char* value, size_t size) {
  mac_addr_type_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:checkin_proto.AndroidCheckinRequest.mac_addr_type)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AndroidCheckinRequest::mac_addr_type() const {
  // @@protoc_insertion_point(field_list:checkin_proto.AndroidCheckinRequest.mac_addr_type)
  return mac_addr_type_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AndroidCheckinRequest::mutable_mac_addr_type() {
  // @@protoc_insertion_point(field_mutable_list:checkin_proto.AndroidCheckinRequest.mac_addr_type)
  return &mac_addr_type_;
}

// optional string serial_number = 16;
bool AndroidCheckinRequest::has_serial_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AndroidCheckinRequest::set_has_serial_number() {
  _has_bits_[0] |= 0x00000004u;
}
void AndroidCheckinRequest::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void AndroidCheckinRequest::clear_serial_number() {
  serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serial_number();
}
const ::std::string& AndroidCheckinRequest::serial_number() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.serial_number)
  return serial_number_.GetNoArena();
}
void AndroidCheckinRequest::set_serial_number(const ::std::string& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.serial_number)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_serial_number(::std::string&& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.serial_number)
}
#endif
void AndroidCheckinRequest::set_serial_number(const char* value) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.serial_number)
}
void AndroidCheckinRequest::set_serial_number(const char* value, size_t size) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.serial_number)
}
::std::string* AndroidCheckinRequest::mutable_serial_number() {
  set_has_serial_number();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.serial_number)
  return serial_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_serial_number() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.serial_number)
  clear_has_serial_number();
  return serial_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_serial_number(::std::string* serial_number) {
  if (serial_number != NULL) {
    set_has_serial_number();
  } else {
    clear_has_serial_number();
  }
  serial_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial_number);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.serial_number)
}

// optional string esn = 17;
bool AndroidCheckinRequest::has_esn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AndroidCheckinRequest::set_has_esn() {
  _has_bits_[0] |= 0x00000008u;
}
void AndroidCheckinRequest::clear_has_esn() {
  _has_bits_[0] &= ~0x00000008u;
}
void AndroidCheckinRequest::clear_esn() {
  esn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_esn();
}
const ::std::string& AndroidCheckinRequest::esn() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.esn)
  return esn_.GetNoArena();
}
void AndroidCheckinRequest::set_esn(const ::std::string& value) {
  set_has_esn();
  esn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.esn)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_esn(::std::string&& value) {
  set_has_esn();
  esn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.esn)
}
#endif
void AndroidCheckinRequest::set_esn(const char* value) {
  set_has_esn();
  esn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.esn)
}
void AndroidCheckinRequest::set_esn(const char* value, size_t size) {
  set_has_esn();
  esn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.esn)
}
::std::string* AndroidCheckinRequest::mutable_esn() {
  set_has_esn();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.esn)
  return esn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_esn() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.esn)
  clear_has_esn();
  return esn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_esn(::std::string* esn) {
  if (esn != NULL) {
    set_has_esn();
  } else {
    clear_has_esn();
  }
  esn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), esn);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.esn)
}

// optional int64 id = 2;
bool AndroidCheckinRequest::has_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AndroidCheckinRequest::set_has_id() {
  _has_bits_[0] |= 0x00000800u;
}
void AndroidCheckinRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000800u;
}
void AndroidCheckinRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
::google::protobuf::int64 AndroidCheckinRequest::id() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.id)
  return id_;
}
void AndroidCheckinRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.id)
}

// optional int64 logging_id = 7;
bool AndroidCheckinRequest::has_logging_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void AndroidCheckinRequest::set_has_logging_id() {
  _has_bits_[0] |= 0x00001000u;
}
void AndroidCheckinRequest::clear_has_logging_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void AndroidCheckinRequest::clear_logging_id() {
  logging_id_ = GOOGLE_LONGLONG(0);
  clear_has_logging_id();
}
::google::protobuf::int64 AndroidCheckinRequest::logging_id() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.logging_id)
  return logging_id_;
}
void AndroidCheckinRequest::set_logging_id(::google::protobuf::int64 value) {
  set_has_logging_id();
  logging_id_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.logging_id)
}

// optional string digest = 3;
bool AndroidCheckinRequest::has_digest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AndroidCheckinRequest::set_has_digest() {
  _has_bits_[0] |= 0x00000010u;
}
void AndroidCheckinRequest::clear_has_digest() {
  _has_bits_[0] &= ~0x00000010u;
}
void AndroidCheckinRequest::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_digest();
}
const ::std::string& AndroidCheckinRequest::digest() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.digest)
  return digest_.GetNoArena();
}
void AndroidCheckinRequest::set_digest(const ::std::string& value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.digest)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_digest(::std::string&& value) {
  set_has_digest();
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.digest)
}
#endif
void AndroidCheckinRequest::set_digest(const char* value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.digest)
}
void AndroidCheckinRequest::set_digest(const char* value, size_t size) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.digest)
}
::std::string* AndroidCheckinRequest::mutable_digest() {
  set_has_digest();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_digest() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.digest)
  clear_has_digest();
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    set_has_digest();
  } else {
    clear_has_digest();
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.digest)
}

// optional string locale = 6;
bool AndroidCheckinRequest::has_locale() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AndroidCheckinRequest::set_has_locale() {
  _has_bits_[0] |= 0x00000020u;
}
void AndroidCheckinRequest::clear_has_locale() {
  _has_bits_[0] &= ~0x00000020u;
}
void AndroidCheckinRequest::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_locale();
}
const ::std::string& AndroidCheckinRequest::locale() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.locale)
  return locale_.GetNoArena();
}
void AndroidCheckinRequest::set_locale(const ::std::string& value) {
  set_has_locale();
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.locale)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_locale(::std::string&& value) {
  set_has_locale();
  locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.locale)
}
#endif
void AndroidCheckinRequest::set_locale(const char* value) {
  set_has_locale();
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.locale)
}
void AndroidCheckinRequest::set_locale(const char* value, size_t size) {
  set_has_locale();
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.locale)
}
::std::string* AndroidCheckinRequest::mutable_locale() {
  set_has_locale();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_locale() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.locale)
  clear_has_locale();
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    set_has_locale();
  } else {
    clear_has_locale();
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.locale)
}

// required .checkin_proto.AndroidCheckinProto checkin = 4;
bool AndroidCheckinRequest::has_checkin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AndroidCheckinRequest::set_has_checkin() {
  _has_bits_[0] |= 0x00000400u;
}
void AndroidCheckinRequest::clear_has_checkin() {
  _has_bits_[0] &= ~0x00000400u;
}
void AndroidCheckinRequest::clear_checkin() {
  if (checkin_ != NULL) checkin_->::checkin_proto::AndroidCheckinProto::Clear();
  clear_has_checkin();
}
const ::checkin_proto::AndroidCheckinProto& AndroidCheckinRequest::checkin() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.checkin)
  return checkin_ != NULL ? *checkin_
                         : *::checkin_proto::AndroidCheckinProto::internal_default_instance();
}
::checkin_proto::AndroidCheckinProto* AndroidCheckinRequest::mutable_checkin() {
  set_has_checkin();
  if (checkin_ == NULL) {
    checkin_ = new ::checkin_proto::AndroidCheckinProto;
  }
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.checkin)
  return checkin_;
}
::checkin_proto::AndroidCheckinProto* AndroidCheckinRequest::release_checkin() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.checkin)
  clear_has_checkin();
  ::checkin_proto::AndroidCheckinProto* temp = checkin_;
  checkin_ = NULL;
  return temp;
}
void AndroidCheckinRequest::set_allocated_checkin(::checkin_proto::AndroidCheckinProto* checkin) {
  delete checkin_;
  checkin_ = checkin;
  if (checkin) {
    set_has_checkin();
  } else {
    clear_has_checkin();
  }
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.checkin)
}

// optional string desired_build = 5;
bool AndroidCheckinRequest::has_desired_build() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AndroidCheckinRequest::set_has_desired_build() {
  _has_bits_[0] |= 0x00000040u;
}
void AndroidCheckinRequest::clear_has_desired_build() {
  _has_bits_[0] &= ~0x00000040u;
}
void AndroidCheckinRequest::clear_desired_build() {
  desired_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desired_build();
}
const ::std::string& AndroidCheckinRequest::desired_build() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.desired_build)
  return desired_build_.GetNoArena();
}
void AndroidCheckinRequest::set_desired_build(const ::std::string& value) {
  set_has_desired_build();
  desired_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.desired_build)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_desired_build(::std::string&& value) {
  set_has_desired_build();
  desired_build_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.desired_build)
}
#endif
void AndroidCheckinRequest::set_desired_build(const char* value) {
  set_has_desired_build();
  desired_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.desired_build)
}
void AndroidCheckinRequest::set_desired_build(const char* value, size_t size) {
  set_has_desired_build();
  desired_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.desired_build)
}
::std::string* AndroidCheckinRequest::mutable_desired_build() {
  set_has_desired_build();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.desired_build)
  return desired_build_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_desired_build() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.desired_build)
  clear_has_desired_build();
  return desired_build_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_desired_build(::std::string* desired_build) {
  if (desired_build != NULL) {
    set_has_desired_build();
  } else {
    clear_has_desired_build();
  }
  desired_build_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desired_build);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.desired_build)
}

// optional string market_checkin = 8;
bool AndroidCheckinRequest::has_market_checkin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AndroidCheckinRequest::set_has_market_checkin() {
  _has_bits_[0] |= 0x00000080u;
}
void AndroidCheckinRequest::clear_has_market_checkin() {
  _has_bits_[0] &= ~0x00000080u;
}
void AndroidCheckinRequest::clear_market_checkin() {
  market_checkin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_market_checkin();
}
const ::std::string& AndroidCheckinRequest::market_checkin() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.market_checkin)
  return market_checkin_.GetNoArena();
}
void AndroidCheckinRequest::set_market_checkin(const ::std::string& value) {
  set_has_market_checkin();
  market_checkin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.market_checkin)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_market_checkin(::std::string&& value) {
  set_has_market_checkin();
  market_checkin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.market_checkin)
}
#endif
void AndroidCheckinRequest::set_market_checkin(const char* value) {
  set_has_market_checkin();
  market_checkin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.market_checkin)
}
void AndroidCheckinRequest::set_market_checkin(const char* value, size_t size) {
  set_has_market_checkin();
  market_checkin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.market_checkin)
}
::std::string* AndroidCheckinRequest::mutable_market_checkin() {
  set_has_market_checkin();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.market_checkin)
  return market_checkin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_market_checkin() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.market_checkin)
  clear_has_market_checkin();
  return market_checkin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_market_checkin(::std::string* market_checkin) {
  if (market_checkin != NULL) {
    set_has_market_checkin();
  } else {
    clear_has_market_checkin();
  }
  market_checkin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market_checkin);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.market_checkin)
}

// repeated string account_cookie = 11;
int AndroidCheckinRequest::account_cookie_size() const {
  return account_cookie_.size();
}
void AndroidCheckinRequest::clear_account_cookie() {
  account_cookie_.Clear();
}
const ::std::string& AndroidCheckinRequest::account_cookie(int index) const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.account_cookie)
  return account_cookie_.Get(index);
}
::std::string* AndroidCheckinRequest::mutable_account_cookie(int index) {
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.account_cookie)
  return account_cookie_.Mutable(index);
}
void AndroidCheckinRequest::set_account_cookie(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.account_cookie)
  account_cookie_.Mutable(index)->assign(value);
}
void AndroidCheckinRequest::set_account_cookie(int index, const char* value) {
  account_cookie_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.account_cookie)
}
void AndroidCheckinRequest::set_account_cookie(int index, const char* value, size_t size) {
  account_cookie_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.account_cookie)
}
::std::string* AndroidCheckinRequest::add_account_cookie() {
  // @@protoc_insertion_point(field_add_mutable:checkin_proto.AndroidCheckinRequest.account_cookie)
  return account_cookie_.Add();
}
void AndroidCheckinRequest::add_account_cookie(const ::std::string& value) {
  account_cookie_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:checkin_proto.AndroidCheckinRequest.account_cookie)
}
void AndroidCheckinRequest::add_account_cookie(const char* value) {
  account_cookie_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:checkin_proto.AndroidCheckinRequest.account_cookie)
}
void AndroidCheckinRequest::add_account_cookie(const char* value, size_t size) {
  account_cookie_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:checkin_proto.AndroidCheckinRequest.account_cookie)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AndroidCheckinRequest::account_cookie() const {
  // @@protoc_insertion_point(field_list:checkin_proto.AndroidCheckinRequest.account_cookie)
  return account_cookie_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AndroidCheckinRequest::mutable_account_cookie() {
  // @@protoc_insertion_point(field_mutable_list:checkin_proto.AndroidCheckinRequest.account_cookie)
  return &account_cookie_;
}

// optional string time_zone = 12;
bool AndroidCheckinRequest::has_time_zone() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AndroidCheckinRequest::set_has_time_zone() {
  _has_bits_[0] |= 0x00000100u;
}
void AndroidCheckinRequest::clear_has_time_zone() {
  _has_bits_[0] &= ~0x00000100u;
}
void AndroidCheckinRequest::clear_time_zone() {
  time_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time_zone();
}
const ::std::string& AndroidCheckinRequest::time_zone() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.time_zone)
  return time_zone_.GetNoArena();
}
void AndroidCheckinRequest::set_time_zone(const ::std::string& value) {
  set_has_time_zone();
  time_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.time_zone)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_time_zone(::std::string&& value) {
  set_has_time_zone();
  time_zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.time_zone)
}
#endif
void AndroidCheckinRequest::set_time_zone(const char* value) {
  set_has_time_zone();
  time_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.time_zone)
}
void AndroidCheckinRequest::set_time_zone(const char* value, size_t size) {
  set_has_time_zone();
  time_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.time_zone)
}
::std::string* AndroidCheckinRequest::mutable_time_zone() {
  set_has_time_zone();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.time_zone)
  return time_zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_time_zone() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.time_zone)
  clear_has_time_zone();
  return time_zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_time_zone(::std::string* time_zone) {
  if (time_zone != NULL) {
    set_has_time_zone();
  } else {
    clear_has_time_zone();
  }
  time_zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_zone);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.time_zone)
}

// optional fixed64 security_token = 13;
bool AndroidCheckinRequest::has_security_token() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AndroidCheckinRequest::set_has_security_token() {
  _has_bits_[0] |= 0x00002000u;
}
void AndroidCheckinRequest::clear_has_security_token() {
  _has_bits_[0] &= ~0x00002000u;
}
void AndroidCheckinRequest::clear_security_token() {
  security_token_ = GOOGLE_ULONGLONG(0);
  clear_has_security_token();
}
::google::protobuf::uint64 AndroidCheckinRequest::security_token() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.security_token)
  return security_token_;
}
void AndroidCheckinRequest::set_security_token(::google::protobuf::uint64 value) {
  set_has_security_token();
  security_token_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.security_token)
}

// optional int32 version = 14;
bool AndroidCheckinRequest::has_version() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void AndroidCheckinRequest::set_has_version() {
  _has_bits_[0] |= 0x00004000u;
}
void AndroidCheckinRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00004000u;
}
void AndroidCheckinRequest::clear_version() {
  version_ = 0;
  clear_has_version();
}
::google::protobuf::int32 AndroidCheckinRequest::version() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.version)
  return version_;
}
void AndroidCheckinRequest::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.version)
}

// repeated string ota_cert = 15;
int AndroidCheckinRequest::ota_cert_size() const {
  return ota_cert_.size();
}
void AndroidCheckinRequest::clear_ota_cert() {
  ota_cert_.Clear();
}
const ::std::string& AndroidCheckinRequest::ota_cert(int index) const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.ota_cert)
  return ota_cert_.Get(index);
}
::std::string* AndroidCheckinRequest::mutable_ota_cert(int index) {
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.ota_cert)
  return ota_cert_.Mutable(index);
}
void AndroidCheckinRequest::set_ota_cert(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.ota_cert)
  ota_cert_.Mutable(index)->assign(value);
}
void AndroidCheckinRequest::set_ota_cert(int index, const char* value) {
  ota_cert_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.ota_cert)
}
void AndroidCheckinRequest::set_ota_cert(int index, const char* value, size_t size) {
  ota_cert_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.ota_cert)
}
::std::string* AndroidCheckinRequest::add_ota_cert() {
  // @@protoc_insertion_point(field_add_mutable:checkin_proto.AndroidCheckinRequest.ota_cert)
  return ota_cert_.Add();
}
void AndroidCheckinRequest::add_ota_cert(const ::std::string& value) {
  ota_cert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:checkin_proto.AndroidCheckinRequest.ota_cert)
}
void AndroidCheckinRequest::add_ota_cert(const char* value) {
  ota_cert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:checkin_proto.AndroidCheckinRequest.ota_cert)
}
void AndroidCheckinRequest::add_ota_cert(const char* value, size_t size) {
  ota_cert_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:checkin_proto.AndroidCheckinRequest.ota_cert)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AndroidCheckinRequest::ota_cert() const {
  // @@protoc_insertion_point(field_list:checkin_proto.AndroidCheckinRequest.ota_cert)
  return ota_cert_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AndroidCheckinRequest::mutable_ota_cert() {
  // @@protoc_insertion_point(field_mutable_list:checkin_proto.AndroidCheckinRequest.ota_cert)
  return &ota_cert_;
}

// optional int32 fragment = 20;
bool AndroidCheckinRequest::has_fragment() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void AndroidCheckinRequest::set_has_fragment() {
  _has_bits_[0] |= 0x00008000u;
}
void AndroidCheckinRequest::clear_has_fragment() {
  _has_bits_[0] &= ~0x00008000u;
}
void AndroidCheckinRequest::clear_fragment() {
  fragment_ = 0;
  clear_has_fragment();
}
::google::protobuf::int32 AndroidCheckinRequest::fragment() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.fragment)
  return fragment_;
}
void AndroidCheckinRequest::set_fragment(::google::protobuf::int32 value) {
  set_has_fragment();
  fragment_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.fragment)
}

// optional string user_name = 21;
bool AndroidCheckinRequest::has_user_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AndroidCheckinRequest::set_has_user_name() {
  _has_bits_[0] |= 0x00000200u;
}
void AndroidCheckinRequest::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000200u;
}
void AndroidCheckinRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
const ::std::string& AndroidCheckinRequest::user_name() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.user_name)
  return user_name_.GetNoArena();
}
void AndroidCheckinRequest::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.user_name)
}
#if LANG_CXX11
void AndroidCheckinRequest::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinRequest.user_name)
}
#endif
void AndroidCheckinRequest::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinRequest.user_name)
}
void AndroidCheckinRequest::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinRequest.user_name)
}
::std::string* AndroidCheckinRequest::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinRequest.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinRequest.user_name)
}

// optional int32 user_serial_number = 22;
bool AndroidCheckinRequest::has_user_serial_number() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void AndroidCheckinRequest::set_has_user_serial_number() {
  _has_bits_[0] |= 0x00010000u;
}
void AndroidCheckinRequest::clear_has_user_serial_number() {
  _has_bits_[0] &= ~0x00010000u;
}
void AndroidCheckinRequest::clear_user_serial_number() {
  user_serial_number_ = 0;
  clear_has_user_serial_number();
}
::google::protobuf::int32 AndroidCheckinRequest::user_serial_number() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinRequest.user_serial_number)
  return user_serial_number_;
}
void AndroidCheckinRequest::set_user_serial_number(::google::protobuf::int32 value) {
  set_has_user_serial_number();
  user_serial_number_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinRequest.user_serial_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AndroidCheckinResponse::kStatsOkFieldNumber;
const int AndroidCheckinResponse::kTimeMsecFieldNumber;
const int AndroidCheckinResponse::kDigestFieldNumber;
const int AndroidCheckinResponse::kSettingsDiffFieldNumber;
const int AndroidCheckinResponse::kDeleteSettingFieldNumber;
const int AndroidCheckinResponse::kSettingFieldNumber;
const int AndroidCheckinResponse::kMarketOkFieldNumber;
const int AndroidCheckinResponse::kAndroidIdFieldNumber;
const int AndroidCheckinResponse::kSecurityTokenFieldNumber;
const int AndroidCheckinResponse::kVersionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AndroidCheckinResponse::AndroidCheckinResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_checkin_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:checkin_proto.AndroidCheckinResponse)
}
AndroidCheckinResponse::AndroidCheckinResponse(const AndroidCheckinResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      delete_setting_(from.delete_setting_),
      setting_(from.setting_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_digest()) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version_info()) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  ::memcpy(&time_msec_, &from.time_msec_,
    reinterpret_cast<char*>(&market_ok_) -
    reinterpret_cast<char*>(&time_msec_) + sizeof(market_ok_));
  // @@protoc_insertion_point(copy_constructor:checkin_proto.AndroidCheckinResponse)
}

void AndroidCheckinResponse::SharedCtor() {
  _cached_size_ = 0;
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_msec_, 0, reinterpret_cast<char*>(&market_ok_) -
    reinterpret_cast<char*>(&time_msec_) + sizeof(market_ok_));
}

AndroidCheckinResponse::~AndroidCheckinResponse() {
  // @@protoc_insertion_point(destructor:checkin_proto.AndroidCheckinResponse)
  SharedDtor();
}

void AndroidCheckinResponse::SharedDtor() {
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AndroidCheckinResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AndroidCheckinResponse& AndroidCheckinResponse::default_instance() {
  protobuf_InitDefaults_checkin_2eproto();
  return *internal_default_instance();
}

AndroidCheckinResponse* AndroidCheckinResponse::New(::google::protobuf::Arena* arena) const {
  AndroidCheckinResponse* n = new AndroidCheckinResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AndroidCheckinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:checkin_proto.AndroidCheckinResponse)
  delete_setting_.Clear();
  setting_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_digest()) {
      GOOGLE_DCHECK(!digest_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*digest_.UnsafeRawStringPointer())->clear();
    }
    if (has_version_info()) {
      GOOGLE_DCHECK(!version_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_info_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&time_msec_, 0, reinterpret_cast<char*>(&market_ok_) -
      reinterpret_cast<char*>(&time_msec_) + sizeof(market_ok_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AndroidCheckinResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:checkin_proto.AndroidCheckinResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool stats_ok = 1;
      case 1: {
        if (tag == 8u) {
          set_has_stats_ok();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stats_ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_msec = 3;
      case 3: {
        if (tag == 24u) {
          set_has_time_msec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_msec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string digest = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .checkin_proto.GservicesSetting setting = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_setting()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional bool market_ok = 6;
      case 6: {
        if (tag == 48u) {
          set_has_market_ok();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &market_ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 android_id = 7;
      case 7: {
        if (tag == 57u) {
          set_has_android_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &android_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 security_token = 8;
      case 8: {
        if (tag == 65u) {
          set_has_security_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &security_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool settings_diff = 9;
      case 9: {
        if (tag == 72u) {
          set_has_settings_diff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &settings_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string delete_setting = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_delete_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version_info = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:checkin_proto.AndroidCheckinResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:checkin_proto.AndroidCheckinResponse)
  return false;
#undef DO_
}

void AndroidCheckinResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:checkin_proto.AndroidCheckinResponse)
  // required bool stats_ok = 1;
  if (has_stats_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->stats_ok(), output);
  }

  // optional int64 time_msec = 3;
  if (has_time_msec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time_msec(), output);
  }

  // optional string digest = 4;
  if (has_digest()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->digest(), output);
  }

  // repeated .checkin_proto.GservicesSetting setting = 5;
  for (unsigned int i = 0, n = this->setting_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->setting(i), output);
  }

  // optional bool market_ok = 6;
  if (has_market_ok()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->market_ok(), output);
  }

  // optional fixed64 android_id = 7;
  if (has_android_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->android_id(), output);
  }

  // optional fixed64 security_token = 8;
  if (has_security_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->security_token(), output);
  }

  // optional bool settings_diff = 9;
  if (has_settings_diff()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->settings_diff(), output);
  }

  // repeated string delete_setting = 10;
  for (int i = 0; i < this->delete_setting_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->delete_setting(i), output);
  }

  // optional string version_info = 11;
  if (has_version_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->version_info(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:checkin_proto.AndroidCheckinResponse)
}

size_t AndroidCheckinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:checkin_proto.AndroidCheckinResponse)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // required bool stats_ok = 1;
  if (has_stats_ok()) {
    total_size += 1 + 1;
  }
  // repeated string delete_setting = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delete_setting_size());
  for (int i = 0; i < this->delete_setting_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->delete_setting(i));
  }

  // repeated .checkin_proto.GservicesSetting setting = 5;
  {
    unsigned int count = this->setting_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setting(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string digest = 4;
    if (has_digest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->digest());
    }

    // optional string version_info = 11;
    if (has_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version_info());
    }

    // optional int64 time_msec = 3;
    if (has_time_msec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_msec());
    }

    // optional fixed64 android_id = 7;
    if (has_android_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 security_token = 8;
    if (has_security_token()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional bool settings_diff = 9;
    if (has_settings_diff()) {
      total_size += 1 + 1;
    }

    // optional bool market_ok = 6;
    if (has_market_ok()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AndroidCheckinResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AndroidCheckinResponse*>(&from));
}

void AndroidCheckinResponse::MergeFrom(const AndroidCheckinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:checkin_proto.AndroidCheckinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delete_setting_.MergeFrom(from.delete_setting_);
  setting_.MergeFrom(from.setting_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_digest()) {
      set_has_digest();
      digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
    }
    if (from.has_version_info()) {
      set_has_version_info();
      version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
    }
    if (from.has_time_msec()) {
      set_time_msec(from.time_msec());
    }
    if (from.has_android_id()) {
      set_android_id(from.android_id());
    }
    if (from.has_security_token()) {
      set_security_token(from.security_token());
    }
    if (from.has_stats_ok()) {
      set_stats_ok(from.stats_ok());
    }
    if (from.has_settings_diff()) {
      set_settings_diff(from.settings_diff());
    }
    if (from.has_market_ok()) {
      set_market_ok(from.market_ok());
    }
  }
}

void AndroidCheckinResponse::CopyFrom(const AndroidCheckinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:checkin_proto.AndroidCheckinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidCheckinResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->setting())) return false;
  return true;
}

void AndroidCheckinResponse::Swap(AndroidCheckinResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AndroidCheckinResponse::InternalSwap(AndroidCheckinResponse* other) {
  delete_setting_.UnsafeArenaSwap(&other->delete_setting_);
  setting_.UnsafeArenaSwap(&other->setting_);
  digest_.Swap(&other->digest_);
  version_info_.Swap(&other->version_info_);
  std::swap(time_msec_, other->time_msec_);
  std::swap(android_id_, other->android_id_);
  std::swap(security_token_, other->security_token_);
  std::swap(stats_ok_, other->stats_ok_);
  std::swap(settings_diff_, other->settings_diff_);
  std::swap(market_ok_, other->market_ok_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AndroidCheckinResponse::GetTypeName() const {
  return "checkin_proto.AndroidCheckinResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AndroidCheckinResponse

// required bool stats_ok = 1;
bool AndroidCheckinResponse::has_stats_ok() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AndroidCheckinResponse::set_has_stats_ok() {
  _has_bits_[0] |= 0x00000020u;
}
void AndroidCheckinResponse::clear_has_stats_ok() {
  _has_bits_[0] &= ~0x00000020u;
}
void AndroidCheckinResponse::clear_stats_ok() {
  stats_ok_ = false;
  clear_has_stats_ok();
}
bool AndroidCheckinResponse::stats_ok() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.stats_ok)
  return stats_ok_;
}
void AndroidCheckinResponse::set_stats_ok(bool value) {
  set_has_stats_ok();
  stats_ok_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.stats_ok)
}

// optional int64 time_msec = 3;
bool AndroidCheckinResponse::has_time_msec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AndroidCheckinResponse::set_has_time_msec() {
  _has_bits_[0] |= 0x00000004u;
}
void AndroidCheckinResponse::clear_has_time_msec() {
  _has_bits_[0] &= ~0x00000004u;
}
void AndroidCheckinResponse::clear_time_msec() {
  time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_time_msec();
}
::google::protobuf::int64 AndroidCheckinResponse::time_msec() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.time_msec)
  return time_msec_;
}
void AndroidCheckinResponse::set_time_msec(::google::protobuf::int64 value) {
  set_has_time_msec();
  time_msec_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.time_msec)
}

// optional string digest = 4;
bool AndroidCheckinResponse::has_digest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AndroidCheckinResponse::set_has_digest() {
  _has_bits_[0] |= 0x00000001u;
}
void AndroidCheckinResponse::clear_has_digest() {
  _has_bits_[0] &= ~0x00000001u;
}
void AndroidCheckinResponse::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_digest();
}
const ::std::string& AndroidCheckinResponse::digest() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.digest)
  return digest_.GetNoArena();
}
void AndroidCheckinResponse::set_digest(const ::std::string& value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.digest)
}
#if LANG_CXX11
void AndroidCheckinResponse::set_digest(::std::string&& value) {
  set_has_digest();
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinResponse.digest)
}
#endif
void AndroidCheckinResponse::set_digest(const char* value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinResponse.digest)
}
void AndroidCheckinResponse::set_digest(const char* value, size_t size) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinResponse.digest)
}
::std::string* AndroidCheckinResponse::mutable_digest() {
  set_has_digest();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinResponse.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinResponse::release_digest() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinResponse.digest)
  clear_has_digest();
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinResponse::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    set_has_digest();
  } else {
    clear_has_digest();
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinResponse.digest)
}

// optional bool settings_diff = 9;
bool AndroidCheckinResponse::has_settings_diff() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AndroidCheckinResponse::set_has_settings_diff() {
  _has_bits_[0] |= 0x00000040u;
}
void AndroidCheckinResponse::clear_has_settings_diff() {
  _has_bits_[0] &= ~0x00000040u;
}
void AndroidCheckinResponse::clear_settings_diff() {
  settings_diff_ = false;
  clear_has_settings_diff();
}
bool AndroidCheckinResponse::settings_diff() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.settings_diff)
  return settings_diff_;
}
void AndroidCheckinResponse::set_settings_diff(bool value) {
  set_has_settings_diff();
  settings_diff_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.settings_diff)
}

// repeated string delete_setting = 10;
int AndroidCheckinResponse::delete_setting_size() const {
  return delete_setting_.size();
}
void AndroidCheckinResponse::clear_delete_setting() {
  delete_setting_.Clear();
}
const ::std::string& AndroidCheckinResponse::delete_setting(int index) const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.delete_setting)
  return delete_setting_.Get(index);
}
::std::string* AndroidCheckinResponse::mutable_delete_setting(int index) {
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinResponse.delete_setting)
  return delete_setting_.Mutable(index);
}
void AndroidCheckinResponse::set_delete_setting(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.delete_setting)
  delete_setting_.Mutable(index)->assign(value);
}
void AndroidCheckinResponse::set_delete_setting(int index, const char* value) {
  delete_setting_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinResponse.delete_setting)
}
void AndroidCheckinResponse::set_delete_setting(int index, const char* value, size_t size) {
  delete_setting_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinResponse.delete_setting)
}
::std::string* AndroidCheckinResponse::add_delete_setting() {
  // @@protoc_insertion_point(field_add_mutable:checkin_proto.AndroidCheckinResponse.delete_setting)
  return delete_setting_.Add();
}
void AndroidCheckinResponse::add_delete_setting(const ::std::string& value) {
  delete_setting_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:checkin_proto.AndroidCheckinResponse.delete_setting)
}
void AndroidCheckinResponse::add_delete_setting(const char* value) {
  delete_setting_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:checkin_proto.AndroidCheckinResponse.delete_setting)
}
void AndroidCheckinResponse::add_delete_setting(const char* value, size_t size) {
  delete_setting_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:checkin_proto.AndroidCheckinResponse.delete_setting)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AndroidCheckinResponse::delete_setting() const {
  // @@protoc_insertion_point(field_list:checkin_proto.AndroidCheckinResponse.delete_setting)
  return delete_setting_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AndroidCheckinResponse::mutable_delete_setting() {
  // @@protoc_insertion_point(field_mutable_list:checkin_proto.AndroidCheckinResponse.delete_setting)
  return &delete_setting_;
}

// repeated .checkin_proto.GservicesSetting setting = 5;
int AndroidCheckinResponse::setting_size() const {
  return setting_.size();
}
void AndroidCheckinResponse::clear_setting() {
  setting_.Clear();
}
const ::checkin_proto::GservicesSetting& AndroidCheckinResponse::setting(int index) const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.setting)
  return setting_.Get(index);
}
::checkin_proto::GservicesSetting* AndroidCheckinResponse::mutable_setting(int index) {
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinResponse.setting)
  return setting_.Mutable(index);
}
::checkin_proto::GservicesSetting* AndroidCheckinResponse::add_setting() {
  // @@protoc_insertion_point(field_add:checkin_proto.AndroidCheckinResponse.setting)
  return setting_.Add();
}
::google::protobuf::RepeatedPtrField< ::checkin_proto::GservicesSetting >*
AndroidCheckinResponse::mutable_setting() {
  // @@protoc_insertion_point(field_mutable_list:checkin_proto.AndroidCheckinResponse.setting)
  return &setting_;
}
const ::google::protobuf::RepeatedPtrField< ::checkin_proto::GservicesSetting >&
AndroidCheckinResponse::setting() const {
  // @@protoc_insertion_point(field_list:checkin_proto.AndroidCheckinResponse.setting)
  return setting_;
}

// optional bool market_ok = 6;
bool AndroidCheckinResponse::has_market_ok() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AndroidCheckinResponse::set_has_market_ok() {
  _has_bits_[0] |= 0x00000080u;
}
void AndroidCheckinResponse::clear_has_market_ok() {
  _has_bits_[0] &= ~0x00000080u;
}
void AndroidCheckinResponse::clear_market_ok() {
  market_ok_ = false;
  clear_has_market_ok();
}
bool AndroidCheckinResponse::market_ok() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.market_ok)
  return market_ok_;
}
void AndroidCheckinResponse::set_market_ok(bool value) {
  set_has_market_ok();
  market_ok_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.market_ok)
}

// optional fixed64 android_id = 7;
bool AndroidCheckinResponse::has_android_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AndroidCheckinResponse::set_has_android_id() {
  _has_bits_[0] |= 0x00000008u;
}
void AndroidCheckinResponse::clear_has_android_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void AndroidCheckinResponse::clear_android_id() {
  android_id_ = GOOGLE_ULONGLONG(0);
  clear_has_android_id();
}
::google::protobuf::uint64 AndroidCheckinResponse::android_id() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.android_id)
  return android_id_;
}
void AndroidCheckinResponse::set_android_id(::google::protobuf::uint64 value) {
  set_has_android_id();
  android_id_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.android_id)
}

// optional fixed64 security_token = 8;
bool AndroidCheckinResponse::has_security_token() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AndroidCheckinResponse::set_has_security_token() {
  _has_bits_[0] |= 0x00000010u;
}
void AndroidCheckinResponse::clear_has_security_token() {
  _has_bits_[0] &= ~0x00000010u;
}
void AndroidCheckinResponse::clear_security_token() {
  security_token_ = GOOGLE_ULONGLONG(0);
  clear_has_security_token();
}
::google::protobuf::uint64 AndroidCheckinResponse::security_token() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.security_token)
  return security_token_;
}
void AndroidCheckinResponse::set_security_token(::google::protobuf::uint64 value) {
  set_has_security_token();
  security_token_ = value;
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.security_token)
}

// optional string version_info = 11;
bool AndroidCheckinResponse::has_version_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AndroidCheckinResponse::set_has_version_info() {
  _has_bits_[0] |= 0x00000002u;
}
void AndroidCheckinResponse::clear_has_version_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void AndroidCheckinResponse::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version_info();
}
const ::std::string& AndroidCheckinResponse::version_info() const {
  // @@protoc_insertion_point(field_get:checkin_proto.AndroidCheckinResponse.version_info)
  return version_info_.GetNoArena();
}
void AndroidCheckinResponse::set_version_info(const ::std::string& value) {
  set_has_version_info();
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:checkin_proto.AndroidCheckinResponse.version_info)
}
#if LANG_CXX11
void AndroidCheckinResponse::set_version_info(::std::string&& value) {
  set_has_version_info();
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:checkin_proto.AndroidCheckinResponse.version_info)
}
#endif
void AndroidCheckinResponse::set_version_info(const char* value) {
  set_has_version_info();
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:checkin_proto.AndroidCheckinResponse.version_info)
}
void AndroidCheckinResponse::set_version_info(const char* value, size_t size) {
  set_has_version_info();
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:checkin_proto.AndroidCheckinResponse.version_info)
}
::std::string* AndroidCheckinResponse::mutable_version_info() {
  set_has_version_info();
  // @@protoc_insertion_point(field_mutable:checkin_proto.AndroidCheckinResponse.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidCheckinResponse::release_version_info() {
  // @@protoc_insertion_point(field_release:checkin_proto.AndroidCheckinResponse.version_info)
  clear_has_version_info();
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidCheckinResponse::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    set_has_version_info();
  } else {
    clear_has_version_info();
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:checkin_proto.AndroidCheckinResponse.version_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace checkin_proto

// @@protoc_insertion_point(global_scope)
